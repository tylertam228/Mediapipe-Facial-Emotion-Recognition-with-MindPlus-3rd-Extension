{
    "mediapipe_fer.initEmotionDetection|block": "Initialize MediaPipe facial emotion recognition",
    "mediapipe_fer.setupCamera|block": "Setup camera source [CAMERA_ID] resolution [WIDTH]x[HEIGHT]",
    "mediapipe_fer.setDetectionParams|block": "Set detection parameters detection confidence [DETECTION_CONFIDENCE] tracking confidence [TRACKING_CONFIDENCE]",
    "mediapipe_fer.setUiOptions|block": "Set UI options fullscreen [FULLSCREEN] direction mode [DIRECTION] screen width [WIDTH] height [HEIGHT]",
    "mediapipe_fer.startEmotionDetection|block": "Start real-time emotion detection",
    "mediapipe_fer.stopEmotionDetection|block": "Stop emotion detection (Press A to close, Press B to toggle face mesh)",
    "mediapipe_fer.getCurrentEmotion|block": "Get current detected emotion",
    "mediapipe_fer.getEmotionConfidence|block": "Get emotion confidence",
    "mediapipe_fer.emotionDetected|block": "Emotion [EMOTION] detected",
    "mediapipe_fer.getEmotionCount|block": "Get emotion [EMOTION] occurrence count",
    "mediapipe_fer.resetEmotionCounter|block": "Reset emotion counter",
    "mediapipe_fer.inputCode|block": "Indent [INDENT_LEVEL] levels + Programming Input: [CODE_INPUT]:",
    "mediapipe_fer.addIndentWithCondition|block": "Indent [INDENT_LEVEL] levels + [CONDITION_TYPE] [CONDITION]:",
    "mediapipe_fer.inputCode_Print|block": "Indent [INDENT_LEVEL] levels + print( [CODE_INPUT] ):",
    "mediapipe_fer.EMOTION.Happy|menu": "Happy",
    "mediapipe_fer.EMOTION.Sad|menu": "Sad",
    "mediapipe_fer.EMOTION.Angry|menu": "Angry",
    "mediapipe_fer.EMOTION.Surprised|menu": "Surprised",
    "mediapipe_fer.EMOTION.Neutral|menu": "Neutral",
    "mediapipe_fer.EMOTION.NoFace|menu": "No Face",
    "mediapipe_fer.DIRECTION.Portrait|menu": "Portrait",
    "mediapipe_fer.DIRECTION.Landscape|menu": "Landscape",
    "mediapipe_fer.BOOLEAN_TYPE.True|menu": "True",
    "mediapipe_fer.BOOLEAN_TYPE.False|menu": "False",
    "mediapipe_fer.CONDITION_TYPES.if|menu": "if",
    "mediapipe_fer.CONDITION_TYPES.elif|menu": "elif",
    "mediapipe_fer.CONDITION_TYPES.else|menu": "else",
    "mediapipe_fer.CONDITION_TYPES.while|menu": "while",
    "mediapipe_fer.CONDITION_TYPES.while not|menu": "while not",
    "mediapipe_fer.CONDITION_TYPES.break|menu": "break",
    "mediapipe_fer.CONDITION_TYPES.continue|menu": "continue",
    "mediapipe_fer.CONDITION_TYPES.pass|menu": "pass"
}
